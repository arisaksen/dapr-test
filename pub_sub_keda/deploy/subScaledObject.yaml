# https://keda.sh/docs/2.15/scalers/rabbitmq-queue/
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: sub-scaledobject
spec:
  scaleTargetRef:
    name: sub                # The Dapr ID of your app defined in the Deployment (The value of the dapr.io/id annotation).
  pollingInterval: 30        # The frequency in seconds with which KEDA checks Redis for current topic partition offset.
  cooldownPeriod: 60         # The period to wait after the last trigger reported active before scaling the resource back to 0. By default, it’s 5 minutes (300 seconds).
  idleReplicaCount: 0        # Always 0
  minReplicaCount: 1         # The minimum number of replicas KEDA creates for your deployment. If your application takes a long time to start, it may be better to set this to 1 to ensure at least one replica of your deployment is always running. Otherwise, set to 0 and KEDA creates the first replica for you.
  maxReplicaCount: 10        # The maximum number of replicas for your deployment. Given how Redis partition offset works, you shouldn’t set that value higher than the total number of topic partitions.
  triggers:
    - type: rabbitmq
      metadata:
        # amqp://<username>:<password>@dapr-dev-rabitmq:5672/ 'kubectl get secret --namespace default dapr-dev-rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 -d' remember to not include '%' at the end from the response!
        host: "amqp://user:SfFrmpIGLVVp54Ju@dapr-dev-rabbitmq.default.svc.cluster.local:5672/"
        protocol: amqp              # Optional. Specifies protocol to use, either amqp or http, or auto to autodetect based on the `host` value. Default value is auto.
        mode: QueueLength           # QueueLength or MessageRate
        queueName: sub-orders       # Name of the queue to read message from.

        value: "5"                  # Message backlog size or Publish/sec. rate to trigger on. (This value can be a float when mode: MessageRate)
        # Example: if one pod can handle 10 messages, set the value target to 10. If the actual number of messages in the queue is 30, the scaler scales to 3 pods. Default is 20

        activationValue: "11"       # Target value for activating the scaler. Learn more about activation here.(Default: 0, Optional, This value can be a float)
        # Example: if activationValue: "11" and message backlog size is 10. The replicaCount will still be 0.

# Troubleshoot
# kubectl run -i --tty --rm debug --image=busybox --restart=Never -- sh
# nslookup dapr-dev-rabbitmq.default.svc.cluster.local
# ping dapr-dev-rabbitmq.default.svc.cluster.local
